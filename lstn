#!/usr/bin/env ruby -W0

class IncomingData
  def self.get
    if !ENV["PIPING"]
      get_from_commands
    else
      #this is for shimming in fixtures
      get_from_pipe
    end
  end

  def self.get_from_pipe
    return @incoming_data if @incoming_data
    @incoming_data = ""
    while x= gets
      @incoming_data = "#{@incoming_data}#{x}"
    end
    return @incoming_data
  end

  def self.app_script(application)
    ['on run argv',
      "tell application \"#{application}\"",
        'set myTrack to name of current track',
        'set myArtist to artist of current track',
        'set info to myArtist & " - " & myTrack & "\\n"',
        'set info to info & "[" & player state & "]"',
        'return info',
      'end tell',
    'end run'].map {|x| " -e '#{x}'"}.join("")
  end

  def self.spotify
    @spotify ||= `osascript #{app_script("Spotify")}`
  end

  def self.itunes
    @itunes ||= `osascript #{app_script("iTunes")}`
  end

  def self.mpc
    @mpc ||= `mpc`
  end

  def self.get_from_commands
    return mpc     if mpc.match(/playing/)
    return itunes  if itunes.match(/playing/)
    return spotify if spotify.match(/playing/)
    return ""
  end
end

def incoming_data
  IncomingData.get
end

def lines
  incoming_data.split("\n") || []
end

def line(num)
  lines[num] || ""
end

def spotify_data_at_line(num)
  line(num).split(":").last.strip
end

puts line(0) if line(0) != ""
